datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String
  createdAt     DateTime      @default(now()) @map("created_at")
  notifications Notification[]
  recentlyViewed RecentlyViewedFile[]
  files         File[]
  groupId       String?
  group         Group?  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  totalStorageSize  BigInt  @default(0)
}

model Group {
  id              String    @id     @default(cuid())
  name            String    @unique
  users           User[]
  maxStorageSize  BigInt       @default(5368709120)
}

model Notification {
  id          String    @id             @default(cuid())
  createdAt   DateTime  @default(now())
  text        String
  title       String
  url         String?
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum FileType {
  FILE
  DIRECTORY
}

model File {
  id          String    @id @default(cuid())
  path        String
  name        String
  size        BigInt
  type        FileType  @default(FILE)    
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  children    File[]    @relation("FileToParent")
  parent      File?     @relation("FileToParent", fields: [parentId], references: [id])
  parentId    String?   
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  recentlyViewedBy  RecentlyViewedFile[]
}

model RecentlyViewedFile {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  file        File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  fileId      String
  viewedAt    DateTime @default(now())

  @@unique([fileId, userId])
}