generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Account_userId_fkey")

  @@unique([provider, providerAccountId], map: "Account_provider_providerAccountId_key")
  @@index([userId], map: "Account_userId_fkey")
}

model recent {
  id         String   @id @default(cuid())
  userId     String
  location   String
  created_at DateTime @default(now())
  user       user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Recent_userId_fkey")

  @@unique([userId, location], map: "Recent_userId_location_key")
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique(map: "Session_sessionToken_key")
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Session_userId_fkey")

  @@index([userId], map: "Session_userId_fkey")
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique(map: "User_email_key")
  emailVerified DateTime?
  image         String?
  password      String?
  created_at    DateTime  @default(now())
  groupId       String?
  account       account[]
  recent        recent[]
  session       session[]
  group         group?    @relation(fields: [groupId], references: [id], onDelete: Cascade, map: "User_groupId_fkey")

  @@index([groupId], map: "User_groupId_fkey")
}

model group {
  id             String @id @default(cuid())
  name           String @unique(map: "Group_name_key")
  maxStorageSize String @default("5368709120")
  user           user[]
}

model deletefile {
  id           String   @id @default(cuid())
  userId       String
  location     String
  DeleteFileAt DateTime
}
