datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String
  accounts      Account[]
  createdAt     DateTime      @default(now()) @map("created_at")
  sessions      Session[]
  recentFiles   Recent[]
  deleteFiles   DeleteFile[]
  AnalysedFiles Analysed[]
  Notifications Notification[]
  groupId       String?
  group         Group?  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  totalStorageSize  String @default("0")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Recent {
  id            String     @id   @default(cuid())
  userId        String
  user          User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  location      String
  createdAt     DateTime   @default(now()) @map("created_at")
  @@unique([userId, location])
}

model Group {
  id              String    @id     @default(cuid())
  name            String    @unique
  users           User[]
  maxStorageSize  String @default("5368709120")
}

model DeleteFile {
  id            String    @id     @default(cuid())
  userId        String
  user          User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  location      String
  DeleteFileAt  DateTime
}

model Analysed {
  id          String @id @default(cuid())
  createdAt   DateTime  @default(now())
  location    String
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  landmark    Json?
  nsfw        Json?
  face        Json?
  objects     Json?
  geo         Json?

  @@unique([userId, location])
}

model Notification {
  id          String    @id             @default(cuid())
  createdAt   DateTime  @default(now())
  text        String
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}
